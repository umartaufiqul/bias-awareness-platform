{"version":3,"sources":["icons/left-arrow.svg","icons/right-arrow.svg","icons/info.svg","icons/help.svg","icons/x-mark.svg","components/Button.js","pages/Introduction.js","actions/index.js","components/MyNavbar.js","components/ScatterChart.js","components/VisualDataset.js","components/VisualModelNew.js","components/Result.js","components/DataTable.js","pages/Visualization.js","pages/MitigationNew.js","pages/Finish.js","pages/Main.js","App.js","serviceWorker.js","components/ScrollToTop.js","reducers/modelReducer.js","reducers/datasetReducer.js","reducers/sectionReducer.js","reducers/loaderReducer.js","reducers/index.js","index.js"],"names":["module","exports","Component","Introduction","className","Navbar","Brand","id","href","setSection","type","section","MyNavbar","help","xmlns","width","height","viewBox","fill","d","steps","selector","content","style","textAlign","useSelector","state","dispatch","useDispatch","useState","isTourOpen","setIsTourOpen","openTour","goToPage","page_index","console","log","window","location","alert","useEffect","includes","Row","Col","src","require","alt","onClick","NavDropdown","title","Item","OverlayTrigger","key","placement","overlay","Tooltip","cursor","returnTutorial","isOpen","onRequestClose","onAfterOpen","target","disableBodyScroll","onBeforeClose","enableBodyScroll","ScatterChart","props","scatter_data","labels","datasets","backgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBackgroundColor","label","catName","pointRadius","data","option","scales","xAxes","gridLines","drawOnChartArea","color","scaleLabel","display","labelString","ticks","suggestedMin","maxTicksLimit","suggestedMax","yAxes","fetch","then","res","json","toxic","nontoxic","toxicity","map","element","index","push","x","y","dialect","options","data_values","data_specs","author","tweet_num","categories","abuse_rate","VisualDataset","values","i","name","value","dataset","checked","htmlFor","marginLeft","marginBottom","model_values","VisualModelNew","model","Result","accStat","resultStat","activeResult","setActiveResult","reportTable","scope","item","class","precision","recall","f1_score","support","distrTable","pblack","pwhite","pblack_white","handleResultChange","tab","marginTop","fontSize","overflow","DataTable","categoryList","tweetListSample","labelActive","setLabelActive","currPage","setCurrPage","length","filterTweet","setFilterTweet","update","setUpdate","padding","overflowY","margin","tableLayout","DropdownButton","Form","Check","defaultChecked","new_label","handleFilter","tweet_list","size","filtered_tweet","paged_tweet","filter","findIndex","cat_item","slice","tweet","returnFilteredTweet","pageNum","Math","ceil","pageItem","Pagination","createPagination","Visualization","datasetActive","setDatasetActive","modelActive","setModelActive","wordInput","setWordInput","wordList","setWordList","category","setCategory","exploreActive","setExploreActive","loaderActive","changeActiveState","handleExploreChange","handleModelChange","setTimeout","marginRight","pop","Dropdown","returnBadCategory","onChange","e","onKeyDown","keyCode","preventDefault","currentTarget","MitigationNew","hiddenFileInput","useRef","modelChoice","fileName","setFileName","showModal","setShowModal","chosenModel","setChosenModel","compare","choice","compareModel","setCompareModel","buttonTitle","setButtonTitle","studentId","setStudentId","studentEmail","setStudentEmail","handleInputChange","handleClose","date","Date","md","readOnly","event","current","click","Group","as","Label","column","sm","return_data","email","file","files","ref","getFullYear","getMonth","getDate","getHours","getMinutes","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Finish","minHeight","Main","path","component","App","exact","Boolean","hostname","match","ScrollToTop","prevProps","this","pathname","scrollTo","React","withRouter","modelReducer","action","datasetReducer","sectionReducer","loaderReducer","allReducers","combineReducers","myStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c94bfadc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.4d84261b.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.913fa54f.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.cffe9e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.8a36d3fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/x-mark.898b1b0e.svg\";","import React, { Component } from \"react\"\r\nimport \"../style/Button.css\"\r\n\r\nclass Button extends Component {\r\n    goToLink = () => {\r\n        window.location.href = this.props.link\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <button \r\n                className=\"button\"\r\n                onClick={this.goToLink}\r\n                >{this.props.name}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button","import React from \"react\"\r\nimport Button from \"../components/Button\"\r\nimport {Col, Row} from \"react-bootstrap\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\n\r\nfunction Introduction() {\r\n    return(\r\n        <div className=\"App\">\r\n        <Navbar className='intro-navbar'>\r\n            <Navbar.Brand id=\"intro-span\">Bias Awareness Platform</Navbar.Brand>\r\n        </Navbar>\r\n            <div className=\"introduction-page\">\r\n                <h1 className=\"text-center\"> Activity 1. Bias in Hate Speech Detection </h1>\r\n                {/* <p> In this activity, a member of high school board would like to have a feedback about their school facility and faculty. However, following the school policy, the board doesn't want to include feedbacks that include toxic or abusive words. On the other hand, the school board is concerned that some of the underrepresented group of student can be unnecessarily filtered out</p>\r\n                <Row className='text-center'>\r\n                    <Col md={{span: 3, offset: 2}}> \r\n                        <div className='comment-sample'> The school lunch is delicious, but I wish the portion could be more fulfilling </div> \r\n                        <div className='comment-label'> Acceptable comment </div>\r\n                    </Col>\r\n                    <Col md={{span: 3, offset: 2}}> \r\n                        <div className='comment-sample'> The school lunch sucks! </div> \r\n                        <div className='comment-label'> Unacceptable </div> \r\n                    </Col>\r\n                </Row>\r\n                <p> Your task is to create a model that can automatically detect and remove such feedback, while taking the school board concern into consideration</p>\r\n                 */}\r\n                <p> Hate speech detection is commonly used in social media context, such as facebook and twitter, in order to filter out post that are deemed hateful or abusive. However, many papers pointed out that hate speech detection technology, such as perspective AI, are biased toward flagging more tweets that use AAE (African-American English) dialect. </p>\r\n                <p> In this activity, you will be able to explore and interactive platform where you can combine several different models with dataset, and observe how some combinations may affect the fairness of the of model </p>\r\n                <p> You will also need to submit a model suspected of being biased that you have mitigate the bias with a debiasing technique, and see how it compare with the original model</p> \r\n                <div className=\"text-center\">\r\n                    <button className='btn btn-green start-btn'> <a href='/bias-awareness-platform/#/visualization'>Start Activity </a></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduction","export const changeModel = (index) => {\r\n    return {\r\n        type: \"CHANGE_MODEL\",\r\n        model: index,\r\n    }\r\n}\r\n\r\nexport const changeDataset = (index) => {\r\n    return {\r\n        type: \"CHANGE_DATA\",\r\n        dataset: index\r\n    }\r\n}\r\n\r\nexport const nextSection = () => {\r\n    return {\r\n        type: \"NEXT_SECTION\"\r\n    }\r\n}\r\n\r\nexport const prevSection = () => {\r\n    return {\r\n        type: \"PREV_SECTION\"\r\n    }\r\n}\r\n\r\nexport const setSection = (id) => {\r\n    return {\r\n        type: \"SET_SECTION\",\r\n        section: id\r\n    }\r\n}\r\n\r\nexport const activateLoader = () => {\r\n    return {\r\n        type: \"LOADER_ACTIVE\"\r\n    }\r\n}\r\n\r\nexport const deactivateLoader = () => {\r\n    return {\r\n        type: \"LOADER_DEACTIVE\"\r\n    }\r\n}","import React, {useState, useEffect} from \"react\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport \"../style/StepProgress.css\"\r\nimport {Row, Col} from \"react-bootstrap\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Tour from \"reactour\"\r\nimport {disableBodyScroll, enableBodyScroll} from \"body-scroll-lock\"\r\nimport {setSection} from \"../actions\"\r\n\r\nconst MyNavbar = () => {\r\n    const help = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill='white'><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm1.25 17c0 .69-.559 1.25-1.25 1.25-.689 0-1.25-.56-1.25-1.25s.561-1.25 1.25-1.25c.691 0 1.25.56 1.25 1.25zm1.393-9.998c-.608-.616-1.515-.955-2.551-.955-2.18 0-3.59 1.55-3.59 3.95h2.011c0-1.486.829-2.013 1.538-2.013.634 0 1.307.421 1.364 1.226.062.847-.39 1.277-.962 1.821-1.412 1.343-1.438 1.993-1.432 3.468h2.005c-.013-.664.03-1.203.935-2.178.677-.73 1.519-1.638 1.536-3.022.011-.924-.284-1.719-.854-2.297z\"/></svg>\r\n\r\n    const steps = [\r\n        {\r\n            selector: '',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Exploring Abusive Speech Detection </h3>\r\n                    <p> In this page, you can interactively explore the combination of different datasets and models for the abusive speech detection, and observe how it affect the distribution and fairness of the result</p> \r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            selector: '#interactive-controller',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Dataset and Model </h3>\r\n                    <p> In this part, you can change the model and dataset used for classification. </p>\r\n                    <p> Try several combinations to see how they interact with each other. Don't forget to click the \"Build Model\" button everytime you want to try the new combination</p>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            selector: '.scatter-chart',\r\n            content: () => (\r\n                <div>\r\n                    <h3 style={{textAlign: 'center'}}> Graph </h3> \r\n                    <p> This graph plot each of the feedback’s probability of being toxic against the probability of it using AAE dialect. The higher its toxic probability, the higher it chance to be classified as toxic </p>\r\n                    <p> The higher its toxic probability, the higher it chance to be classified as toxic. On the other hand, the higher its AAE dialect probability, the higher it is to come from African American students</p>\r\n                </div>\r\n                )\r\n        },\r\n        {\r\n            selector: '#visual-result',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Result Box </h3>\r\n                    <p> The result box display not only the accuracy result for the model, but also the distribution of each class with each label </p>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            selector: '.associated-words',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Associated Words </h3>\r\n                    <p> In this part, you can enter word(s) that you want to include in the dataset. For example, if you inputted 'ugly' and press ENTER, then the dataset will only include tweets that contain the word 'ugly' in it, and exclude the rest.</p>\r\n                    <p> Once you put all the words you want to include, don't forget to click the \"Reload\" button to reload the model!</p>\r\n                </div>\r\n            ),\r\n        }\r\n    ]\r\n\r\n    const sectionList = [\"1. Visualization\", \"2. Debiasing\"]\r\n    const section = useSelector(state => state.section)\r\n    const dispatch = useDispatch()\r\n    const [isTourOpen, setIsTourOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes(\"mitigation\")) {\r\n            dispatch(setSection(2))\r\n        }\r\n        else if (window.location.href.includes(\"visualization\")) {\r\n            dispatch(setSection(1))\r\n        }\r\n        else if (window.location.href.includes(\"evaluation\")) {\r\n            dispatch(setSection(3))\r\n        }\r\n        else if (window.location.href.includes(\"fin\")) {\r\n            dispatch(setSection(4))\r\n        }\r\n    })\r\n\r\n    function closeTour() {\r\n        setIsTourOpen(false)\r\n    };\r\n\r\n    function openTour(){\r\n        setIsTourOpen(true)\r\n    }\r\n\r\n    function goToPage(page_index) {\r\n        console.log(page_index)\r\n        switch(page_index) {\r\n            case 1:\r\n                window.location.href = \"/bias-awareness-platform/#/visualization\"\r\n                dispatch(setSection(1))\r\n                break;\r\n                // window.location.reload()\r\n            case 2:\r\n                window.location.href = \"/bias-awareness-platform/#/mitigation\"\r\n                dispatch(setSection(2))\r\n                break;\r\n                // window.location.reload()\r\n            case 3:\r\n                window.location.href = \"/bias-awareness-platform/#/evaluation\"\r\n                dispatch(setSection(3))\r\n                // alert(\"This page is not available. For now\")\r\n                break;\r\n            default:\r\n                alert(\"No such page!\")\r\n        }\r\n    }\r\n\r\n    function disableBody(target) {disableBodyScroll(target)};\r\n    function enableBody(target) {enableBodyScroll(target)}; \r\n\r\n    function giveWarning() {\r\n        alert(\"This page is not available. For now\")\r\n    }\r\n\r\n    function returnTutorial() {\r\n        if (section === 1) {\r\n            return(\r\n                <div className='tutorial-button'>\r\n                <OverlayTrigger\r\n                key={'left'}\r\n                placement={'left'}\r\n                overlay={\r\n                    <Tooltip id={`tooltip-${'left'}`}>\r\n                    Click here to see the complete tutorial of the page\r\n                    </Tooltip>\r\n                }\r\n                >\r\n                    <div style={{cursor: \"pointer\"}} onClick={openTour}>\r\n                        {help}\r\n                    </div>\r\n                </OverlayTrigger>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const usePrev = () => {\r\n        return section > 1 && section < 3\r\n    }\r\n\r\n    const useNext = () => {\r\n        return section > 0 && section < 2\r\n    }\r\n\r\n    const useDropdown = () => {\r\n        return section > 0 && section < 3\r\n    }\r\n\r\n    return(\r\n        <Navbar className='justify-content-center' id='navbar'>\r\n            <Navbar.Brand id=\"navbar-brand\">Bias Awareness Platform</Navbar.Brand>\r\n            <Row className='mx-auto'>                    \r\n                <Col className='d-flex align-middle'>\r\n                    {usePrev() ? <img src={require('../icons/left-arrow.svg')} alt='' onClick={() => goToPage(section-1)}/> : <span style={{height: \"16px\", width: \"16px\"}}></span>}\r\n                </Col>\r\n                <Col>\r\n                    {useDropdown() ? <NavDropdown title={sectionList[section-1]} className='text-left' id='navbar-dropdown'>\r\n                    <NavDropdown.Item href=\"/bias-awareness-platform/#/visualization\">1. Visualization</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/bias-awareness-platform/#/mitigation\"> 2. Debiasing </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    : <div style={{height: \"2.5rem\"}}></div>\r\n                    }\r\n                \r\n                </Col>\r\n                <Col className='d-flex align-middle'>\r\n                    {useNext() ? <img src={require('../icons/right-arrow.svg')} alt=''onClick={() => goToPage(section+1)}/> : <span style={{height: \"16px\", width: \"16px\"}}> </span>}\r\n                </Col>\r\n                \r\n            </Row>\r\n            {returnTutorial()}\r\n        \r\n            <Tour \r\n                steps={steps}\r\n                isOpen={isTourOpen}\r\n                onRequestClose={closeTour}\r\n                onAfterOpen={disableBody}\r\n                onBeforeClose={enableBody}\r\n            />\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default MyNavbar","import React, {useEffect} from \"react\"\r\nimport { Scatter } from \"react-chartjs-2\"\r\n\r\n\r\nconst ScatterChart = (props) => {\r\n\r\n    var scatter_data = {\r\n        labels: ['Scatter1', 'Scatter2'],\r\n        datasets: [\r\n            {\r\n                backgroundColor: 'rgba(75,192,192,0.6)',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointBackgroundColor: '#fff',\r\n                label: props.catName+ ' speech',\r\n                pointRadius: 5,\r\n                data: []\r\n            },\r\n            {\r\n                backgroundColor: 'rgba(56, 135, 111, 0.6)',\r\n                pointBorderColor: 'rgba(56, 135, 111,1)',\r\n                pointHoverBackgroundColor: 'rgba(56, 135, 111,1)',\r\n                pointHoverBorderColor: 'rgba(56, 135, 111,1)',\r\n                pointBackgroundColor: '#fff',\r\n                label: 'Non-' + props.catName + ' speech',\r\n                pointRadius: 5,\r\n                data: [\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    \r\n    const option = {\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    drawOnChartArea: false,\r\n                    color: \"#131c2b\"\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: props.catName + ' probability',\r\n                },\r\n                ticks: {\r\n                    suggestedMin: 0,\r\n                    maxTicksLimit: 5,\r\n                    suggestedMax: 1\r\n                }  \r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    drawOnChartArea: false,\r\n                    color: \"#131c2b\"\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'AAE dialect probability',\r\n                },\r\n                ticks: {\r\n                    suggestedMin: 0,\r\n                    maxTicksLimit: 5,\r\n                    suggestedMax: 1\r\n                }  \r\n            }]\r\n        },\r\n    }\r\n\r\n    const getResult = () => {\r\n        fetch('/classifier').then(res => res.json()).then(data => {\r\n            var toxic = []\r\n            var nontoxic = []\r\n            data.toxicity.map((element, index) => {\r\n                if (element > 0.5) {\r\n                    toxic.push({x: element, y: data.dialect[index]})\r\n                } else {\r\n                    nontoxic.push({x: element, y: data.dialect[index]})\r\n                }\r\n            })\r\n            scatter_data.datasets[0].data = toxic\r\n            scatter_data.datasets[1].data = nontoxic\r\n            console.log(scatter_data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getResult()\r\n    })\r\n\r\n    return (\r\n        <div className='text-center'>\r\n            <Scatter data={scatter_data} options={option}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScatterChart","import React from \"react\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {changeDataset} from \"../actions\"\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nconst data_values = ['data1', 'data2', 'data3']\r\nconst data_specs = [\r\n    {\r\n        title: \"A Benchmark Dataset for Learning to Intervene in Online Hate Speech\",\r\n        author: \"Jing Qian et al.\",\r\n        tweet_num: 5000,\r\n        categories: 2,\r\n        abuse_rate: 0.8,\r\n    }\r\n]\r\n\r\nconst VisualDataset = () => {\r\n    const data = useSelector(state => state.data)\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div className='visual-dataset'>\r\n            <ul>\r\n                {data_values.map((values, i) => \r\n                        <li key={i+1}> <input type='radio' name ='dataset' value={values} onClick={() => dispatch(changeDataset(i))} checked={ data === i}/> \r\n                            <label htmlFor={values} style={{marginLeft: '8px', marginBottom: '0px'}}> Data {i+1} </label>\r\n                            <OverlayTrigger\r\n                            key={'right'}\r\n                            placement={'right'}\r\n                            overlay={\r\n                                <Tooltip id={`tooltip-${'right'}`} className='text-align-left'>\r\n                                    Title : {data_specs[0].title} <br />\r\n                                    Author : {data_specs[0].author} <br />\r\n                                    Number of Tweets : {data_specs[0].tweet_num} <br />\r\n                                    Categories: {data_specs[0].categories} <br />\r\n                                    Abuse rate: {data_specs[0].abuse_rate}\r\n                                </Tooltip>\r\n                            }\r\n                            >\r\n                            <img src={require('../icons/info.svg')} alt='' className='info-icon'/>\r\n                            </OverlayTrigger>\r\n                        </li>\r\n                    )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisualDataset","import React from \"react\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {changeModel} from \"../actions\"\r\n\r\n\r\nconst model_values = ['model1', 'model2', 'model3']\r\n\r\nconst VisualModelNew = () => {\r\n    const model = useSelector(state => state.model)\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div className='visual-dataset visual-model-new'>\r\n            <ul>\r\n                {model_values.map((values, i) => \r\n                    <li key={i+1}> <input type='radio' name ='model' value={values} onClick={() => dispatch(changeModel(i))} checked={ model === i}/> \r\n                    <label htmlFor={values} style={{marginLeft: '8px', marginBottom: '0px'}}> \r\n                    Model {i+1} </label> </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisualModelNew","import React, {useState} from \"react\"\r\n\r\nconst Result = (props) => {\r\n\r\n    const accStat = props.accStat\r\n    const resultStat = props.resultStat\r\n    const [activeResult, setActiveResult] = useState(\"report\")\r\n\r\n    const reportTable = <table className='table' >\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Class</th>\r\n                <th scope=\"col\">Precision</th>\r\n                <th scope=\"col\">Recall</th>\r\n                <th scope=\"col\">f1-score</th>\r\n                <th scope=\"col\">Support</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {accStat.map((item, i) => \r\n                <tr key={i}>\r\n                    <th scope=\"row\"> {item.class}</th>\r\n                    <td> {item.precision} </td>\r\n                    <td> {item.recall} </td>\r\n                    <td> {item.f1_score} </td>\r\n                    <td> {item.support} </td>\r\n                </tr>\r\n            )}\r\n        </tbody>\r\n    </table>\r\n\r\n    const distrTable = <table className='table'>\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">Class</th>\r\n                <th scope=\"col\">Pblack</th>\r\n                <th scope=\"col\">Pwhite</th>\r\n                <th scope=\"col\">Pblack/Pwhite</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {resultStat.map((item, i) => \r\n                <tr key={i}>\r\n                    <th scope=\"row\"> {item.class}</th>\r\n                    <td> {item.pblack} </td>\r\n                    <td> {item.pwhite} </td>\r\n                    <td> {item.pblack_white} </td>\r\n                </tr>\r\n            )}\r\n        </tbody>\r\n    </table>\r\n\r\n    function handleResultChange(tab) {\r\n        setActiveResult(tab)\r\n    }\r\n\r\n    return(\r\n        <div style={{marginTop: \"1rem\"}}>\r\n            <div className='d-flex justify-content-center'>\r\n                <div className={activeResult === \"report\" ? 'explore-choice active' : 'explore-choice'} style={{fontSize: \"12px\"}} onClick={() => handleResultChange(\"report\")}> Report </div>\r\n                <div className={activeResult === \"dist\" ? 'explore-choice active' : 'explore-choice'} style={{fontSize: \"12px\"}} onClick={() => handleResultChange(\"dist\")}> Distribution </div>\r\n            </div>\r\n            <div id='result-table' style={{overflow: \"auto\", height: \"inherit\"}}>\r\n                {activeResult === \"report\" ? reportTable : distrTable}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","import React, {useState, useEffect} from \"react\"\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Pagination from 'react-bootstrap/Pagination'\r\n\r\n\r\nconst DataTable = (props) => {\r\n    const categoryList = props.categoryList\r\n    const tweetListSample = props.tweetListSample\r\n    \r\n    const [labelActive, setLabelActive] = useState([])\r\n    const [currPage, setCurrPage] = useState(1)\r\n    const [filterTweet, setFilterTweet] = useState(tweetListSample.length)\r\n    const [update, setUpdate] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        var label = []\r\n        for (var i = 0; i < categoryList.length; i++) {\r\n            label.push(true)\r\n        }\r\n        setLabelActive(label)\r\n    }, [categoryList.length])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [filterTweet.length])\r\n    function returnFilteredTweet(tweet_list, size) {\r\n        let filtered_tweet = [...tweet_list]\r\n        filtered_tweet = filtered_tweet.filter((item) => labelActive[categoryList.findIndex((cat_item) => cat_item === item.label)])\r\n        let paged_tweet = filtered_tweet.slice(0+size*(currPage-1), size*currPage)\r\n        if (update) {\r\n            setFilterTweet(filtered_tweet.length)\r\n            setUpdate(false)\r\n        }\r\n        return paged_tweet.map((item, i) => \r\n            <tr> \r\n                <th style={{width: \"50px\"}}> {size*(currPage-1)+i+1} </th>\r\n                <td> {item.tweet} </td>\r\n                <td style={{width: \"150px\"}}> {item.label} </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    \r\n    function handleFilter(index) {\r\n        var new_label = [...labelActive]\r\n        new_label[index] = !labelActive[index]\r\n        console.log(index)\r\n        console.log(new_label)\r\n        setLabelActive(new_label)\r\n        setUpdate(true)\r\n    }\r\n\r\n    function changePage(pagenum) {\r\n        setCurrPage(pagenum)\r\n    }\r\n\r\n    function createPagination(size) {\r\n        //Calculate the number of pagination\r\n        const pageNum = Math.ceil(filterTweet/size)\r\n        console.log(pageNum)\r\n        let pageItem = []\r\n        for (let i = 0; i < pageNum; i++) {\r\n            pageItem.push(<Pagination.Item key={i+1} style={{width: \"auto\", margin: \"0rem\"}} className={i+1 === currPage ? 'page-item active' : 'page-item'} onClick={() => changePage(i+1)}> {i+1} </Pagination.Item>)\r\n        }\r\n        return (\r\n        <Pagination className='justify-content-center' style={{padding: \"0rem\"}}>\r\n            {pageItem}\r\n        </Pagination>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"explore-container\" style={{marginTop: \"1rem\", padding: \"0rem 2rem\", overflowY: \"scroll\"}}>\r\n            <h1 > Exploring Dataset </h1>\r\n            <table className='table'style={{margin: \"2rem 1rem\", tableLayout: \"fixed\"}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{width: \"50px\"}}>No</th>\r\n                        <th >Tweet</th>\r\n                        <th style={{width: \"150px\"}}>\r\n                        <DropdownButton id=\"dropdown-basic-button\" title='Label'>\r\n                        <Form className='text-center'>\r\n                            {categoryList.map((item, i) => (\r\n                                <Form.Check key={i}\r\n                                    type={'checkbox'}\r\n                                    label={item}\r\n                                    defaultChecked={labelActive[i]}\r\n                                    onClick={() => handleFilter(i)}\r\n                                />\r\n                            ))}\r\n                            </Form>\r\n                        </DropdownButton>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { returnFilteredTweet(tweetListSample, 4)}\r\n                </tbody>\r\n            </table>\r\n            {/* <Pagination className='justify-content-center' style={{padding: \"0rem\"}}>\r\n                <Pagination.Item style={{width: \"auto\", margin: \"0rem\"}}> 1 </Pagination.Item>\r\n                <Pagination.Item style={{width: \"auto\", margin: \"0rem\"}}> 2 </Pagination.Item>\r\n                <Pagination.Item style={{width: \"auto\", margin: \"0rem\"}}> 3 </Pagination.Item>\r\n            </Pagination> */}\r\n            {createPagination(4)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTable","import React, {useState, useEffect} from \"react\"\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport \"../style/Visualization.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport ScatterChart from \"../components/ScatterChart\"\r\nimport VisualDataset from \"../components/VisualDataset\"\r\nimport VisualModelNew from \"../components/VisualModelNew\"\r\nimport Dropdown from \"react-bootstrap/Dropdown\"\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\"\r\nimport { activateLoader, deactivateLoader } from \"../actions\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Result from \"../components/Result\"\r\nimport DataTable from \"../components/DataTable\"\r\n\r\nconst Visualization = () => {\r\n\r\n    const [datasetActive, setDatasetActive] = useState(\"active\")\r\n    const [modelActive, setModelActive] = useState(\"\")\r\n    const [wordInput, setWordInput] = useState(\"\")\r\n    const [wordList, setWordList] = useState([])\r\n    const [categoryList, setCategoryList] = useState([\"Hateful\", \"Abusive\", \"neither\"])\r\n    const [category, setCategory] = useState(categoryList[0])\r\n    const [exploreActive, setExploreActive] = useState(\"data\")\r\n    const [labelActive, setLabelActive] = useState([])\r\n\r\n    const loaderActive = useSelector(state => state.loaderActive)\r\n    const resultModel = useSelector(state => state.model)\r\n    const resultData = useSelector(state => state.data)\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const tweetListSample = [{\r\n      tweet: \"Tweet sample but I nned to make it long so forgive me for the length okay\",\r\n      label: \"neither\"\r\n    }, {\r\n        tweet: \"Tweet sample but I need to make it long so forgive me for the length okay\",\r\n        label: \"Hateful\"\r\n      }, {\r\n        tweet: \"Tweet sample but I nned to make it long so forgive me for the length okay\",\r\n        label: \"Abusive\"\r\n      }, {\r\n        tweet: \"Tweet sample but I nned to make it long so forgive me for the length okay\",\r\n        label: \"neither\"\r\n      }, {\r\n          tweet: \"Tweet sample but I need to make it long so forgive me for the length okay\",\r\n          label: \"Hateful\"\r\n        }, {\r\n          tweet: \"Tweet sample but I nned to make it long so forgive me for the length okay\",\r\n          label: \"Abusive\"\r\n        }]\r\n    const resultStat = [{\r\n        class: \"Racism\",\r\n        pblack: 0.001,\r\n        pwhite: 0.003,\r\n        pblack_white: 0.005,\r\n    }, {\r\n        class: \"Sexism\",\r\n        pblack: 0.083,\r\n        pwhite: 0.048,\r\n        pblack_white: 1.724\r\n    }]\r\n\r\n    const accStat = [{\r\n        class: \"Racism\",\r\n        precision: 0.77,\r\n        recall: 0.86,\r\n        f1_score: 0.81,\r\n        support: 3756\r\n    }, {\r\n        class: \"Sexism\",\r\n        precision: 0.84,\r\n        recall: 0.75,\r\n        f1_score: 0.79,\r\n        support: 1344\r\n    }]\r\n\r\n\r\n    function changeActiveState(id) {\r\n        console.log(id)\r\n        if (id === \"dataset-tab\" && datasetActive === \"\") {\r\n           setDatasetActive(\"active\");\r\n           setModelActive(\"\");\r\n        } else if (id === \"model-tab\" && modelActive === \"\"){\r\n            setDatasetActive(\"\");\r\n            setModelActive(\"active\");\r\n        }\r\n    };\r\n\r\n    function changeContent() {\r\n        if (datasetActive === \"active\") {\r\n            return <VisualDataset />\r\n        }\r\n        else {\r\n            return <VisualModelNew />\r\n        }\r\n    };\r\n\r\n    function handleExploreChange(tab) {\r\n        setExploreActive(tab)\r\n    }\r\n\r\n    function handleInputChange(e) {\r\n        setWordInput(e.target.value)\r\n    };\r\n\r\n\r\n    function handleInputDown(e) {\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault()\r\n            const {value} = e.target\r\n            setWordList([...wordList, value]);\r\n            setWordInput(\"\")\r\n        }\r\n    };\r\n\r\n    function handleRemove(index) {\r\n        return () => {\r\n            setWordList(wordList.filter((item, i) => i !== index))\r\n        }\r\n    };\r\n\r\n    function handleModelChange() {\r\n        dispatch(activateLoader())\r\n        setTimeout(function(){\r\n            dispatch(deactivateLoader())\r\n            alert(\"The model has been reloaded\")\r\n        }, 5000)\r\n    }\r\n\r\n    function changeCategory(index) {\r\n        return () => {\r\n            setCategory(categoryList[index])\r\n        }\r\n    }\r\n\r\n    function returnBadCategory() {\r\n        //The only good category should be on the last\r\n        var categories = [...categoryList]\r\n        categories.pop()\r\n        return (\r\n            categories.map((item, i) => \r\n                <Dropdown.Item key={i} onClick={changeCategory(i)}>\r\n                    {item}\r\n                </Dropdown.Item>\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    function selectExplore() {\r\n        if (exploreActive === \"result\") {\r\n            return (\r\n            <div className=\"explore-container\" style={{marginTop: \"1rem\"}}>\r\n            <h1> Abusive Speech Detection Result </h1>\r\n            <div className='scatter-chart'>\r\n                <ScatterChart width={10} height={10} catName={category}/>\r\n                <form className='form-inline justify-content-center align-item-center' style={{marginTop: \"1rem\"}}>\r\n                    <label style={{marginRight: \"1rem\"}}> <h6> Class: </h6></label>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title={category}>\r\n                        {returnBadCategory()}\r\n                    </DropdownButton>\r\n                </form>\r\n            </div>\r\n        </div>)\r\n        }\r\n        else {\r\n            return (<DataTable categoryList={categoryList} tweetListSample={tweetListSample}/>)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='visualization-new'>\r\n            <div className={'loader '+loaderActive}>\r\n                <h3> Please wait a moment </h3>\r\n                <p style={{marginTop: \"1rem\"}}> Your model is current being built.</p>\r\n                <div className='spinner'></div>\r\n            </div>\r\n            <div className='visualization-new-container'>\r\n                <div className='graph-left'>\r\n                    <div className='d-flex justify-content-center'>\r\n                        <div className={exploreActive === \"data\" ? 'explore-choice active' : 'explore-choice'} onClick={() => handleExploreChange(\"data\")}> Data </div>\r\n                        <div className={exploreActive === \"result\" ? 'explore-choice active' : 'explore-choice'} onClick={() => handleExploreChange(\"result\")}> Result </div>\r\n                    </div>\r\n                    {selectExplore()}\r\n                    <div className='associated-words'>\r\n                        <form className='form-inline'>\r\n                        <label> Associated words: </label>\r\n                        <input className=\"form-control ml-4\" type=\"text\" value={wordInput} onChange={handleInputChange} onKeyDown={handleInputDown}></input>\r\n                        <OverlayTrigger\r\n                            key={'top'}\r\n                            placement={'top'}\r\n                            overlay={\r\n                                <Tooltip id={`tooltip-${'top'}`}>\r\n                                Specify words that must be included in the dataset and exclude the rest of dataset. For example, inputting 'ugly' means the data processed are only tweets that contain 'ugly' in it.\r\n                                </Tooltip>\r\n                            }\r\n                            >\r\n                            <img src={require('../icons/help.svg')} alt='' id='help-tag'/>\r\n                        </OverlayTrigger>\r\n                        <button className='btn btn-green ml-4' onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleModelChange()\r\n                            }}> Reload </button>\r\n                        </form>\r\n                        <ul className='word-container'>\r\n                            {wordList.map((item, i) => \r\n                                <li key={i} className='word-tag'>\r\n                                    <span> {item} </span>\r\n                                    <img src={require('../icons/x-mark.svg')} alt='' onClick={handleRemove(i)}/>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className='interactive-right'>\r\n                    <div id='interactive-controller'>\r\n                        <div className='d-flex interact-tab'> \r\n                            <div className={'interactive-choice '+ datasetActive} id=\"dataset-tab\" onClick={(e) => changeActiveState(e.currentTarget.id)}> DATASET </div>\r\n                            <div className={'interactive-choice '+modelActive} id=\"model-tab\" onClick={(e) => changeActiveState(e.currentTarget.id)}> MODEL </div>\r\n                        </div>\r\n                        <div className=\"interact-container\">\r\n                            {changeContent()}\r\n                        </div>\r\n                        <div className='load-btn'>\r\n                            <button type='button' className=\"btn btn-green\" onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleModelChange()\r\n                            }}> Build Model </button>\r\n                        </div>\r\n                    </div>\r\n                    <div id='visual-result'>\r\n                        <h3> Result </h3>\r\n                        {/* <div>\r\n                            <span> Model: Model {resultModel+1} </span>\r\n                            <span style={{marginLeft: \"1rem\"}}> Dataset: Dataset {resultData+1} </span> \r\n                        </div> */}\r\n                        <Result resultStat={resultStat} accStat={accStat}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Visualization","import React, {useRef, useState} from \"react\"\r\nimport \"../style/Mitigation.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Modal from \"react-bootstrap/Modal\"\r\nimport Col from \"react-bootstrap/Col\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Dropdown from \"react-bootstrap/Dropdown\"\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport { activateLoader, deactivateLoader } from \"../actions\"\r\n\r\nconst MitigationNew = () => {\r\n\r\n    const hiddenFileInput = useRef(null)\r\n    const modelChoice = ['Model 1', 'Model 2', 'Model 3']\r\n    const [fileName, setFileName] = useState(\"\")\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [chosenModel, setChosenModel] = useState(\"Choose a model...\")\r\n    const [compareModel, setCompareModel] = useState({compare: \"d-none\", choice: \"\"})\r\n    const [buttonTitle, setButtonTitle] = useState(\"Compare\")\r\n    const [studentId, setStudentId] = useState(\"\")\r\n    const [studentEmail, setStudentEmail] = useState(\"\")\r\n    // const [loaderActive, setLoaderActive] = useState(\"d-none\")\r\n\r\n    const loaderActive = useSelector(state => state.loaderActive)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const resultStat = [{\r\n        class: \"Racism\",\r\n        pblack: 0.001,\r\n        pwhite: 0.003,\r\n        pblack_white: 0.005\r\n    }, {\r\n        class: \"Sexism\",\r\n        pblack: 0.083,\r\n        pwhite: 0.048,\r\n        pblack_white: 1.724\r\n    }]\r\n\r\n    const otherStat = [\r\n        [{\r\n            class: \"Racism\",\r\n            pblack: 0.001,\r\n            pwhite: 0.003,\r\n            pblack_white: 0.005\r\n        }, {\r\n            class: \"Sexism\",\r\n            pblack: 0.083,\r\n            pwhite: 0.048,\r\n            pblack_white: 1.724\r\n        }], [{\r\n            class: \"Racism\",\r\n            pblack: 0.001,\r\n            pwhite: 0.003,\r\n            pblack_white: 0.095\r\n        }, {\r\n            class: \"Sexism\",\r\n            pblack: 0.083,\r\n            pwhite: 0.048,\r\n            pblack_white: 1.724\r\n        }], [{\r\n            class: \"Racism\",\r\n            pblack: 0.001,\r\n            pwhite: 0.031,\r\n            pblack_white: 0.005\r\n        }, {\r\n            class: \"Sexism\",\r\n            pblack: 0.083,\r\n            pwhite: 0.048,\r\n            pblack_white: 1.724\r\n        }], \r\n    ]\r\n\r\n    function onChangeHandler(event) {\r\n        console.log(event.target.files[0])\r\n        setFileName(event.target.files[0].name)\r\n    }\r\n\r\n    function handleClick(event) {\r\n        hiddenFileInput.current.click()\r\n    }\r\n\r\n    function handleChooseModel(index) {\r\n        setChosenModel(modelChoice[index])\r\n    }\r\n\r\n    function handleCompare() {\r\n        if (buttonTitle === \"Compare\") {\r\n            setCompareModel({\r\n                compare: \"\",\r\n                choice: \"d-none\"\r\n            })\r\n            setButtonTitle(\"Change Comparison\")\r\n        }\r\n        else {\r\n            setCompareModel({\r\n                compare: \"d-none\",\r\n                choice: \"\"\r\n            })\r\n            setButtonTitle(\"Compare\")\r\n        }\r\n    }\r\n\r\n    const getIndexEq = (value) => {\r\n        if (chosenModel === \"Choose a model...\") {\r\n            return value === \"Model 1\"\r\n        }\r\n        return value === chosenModel \r\n    }\r\n\r\n    function handleInputChange(e, id) {\r\n        if (id === \"student-id\") {\r\n            setStudentId(e.target.value)\r\n        }\r\n        else {\r\n            setStudentEmail(e.target.value)\r\n        }\r\n    }\r\n\r\n    function handleSubmit() {\r\n        dispatch(activateLoader())\r\n        const return_data = {\r\n            email: studentEmail,\r\n            id: studentId,\r\n            file: fileName\r\n        }\r\n        console.log(return_data)\r\n        setTimeout(function(){\r\n            dispatch(deactivateLoader())\r\n            alert(\"Your model has been submitted\")\r\n        }, 5000)\r\n        setStudentId(\"\")\r\n        setStudentEmail(\"\")\r\n        setFileName(\"\")\r\n    }\r\n\r\n    const handleClose = () => setShowModal(false)\r\n    const handleShow = () => setShowModal(true)\r\n\r\n    const date = new Date()\r\n    return(\r\n        <div className='mitigation-new'>\r\n            {/* <div className={'loader-bg'}></div>\r\n            <div className={'signin-popup'}>\r\n\r\n            </div> */}\r\n            <div className={'loader-bg '+loaderActive}>\r\n\r\n            </div>\r\n            <div className={'loader text-center '+loaderActive}>\r\n                <h3> Please wait a moment </h3>\r\n                <p style={{marginTop: \"1rem\"}}> Your work is currently being submitted.</p>\r\n                <div className='spinner'></div>\r\n            </div>\r\n            <div className='submit-mitigation text-center'>\r\n                <h3> Submit your mitigation algorithm! </h3>\r\n                <form className=' justify-content-center' style={{marginTop: \"2rem\"}}>\r\n                    <Row className='form-part'>\r\n                        <Col md={8} className='align-item-center'>\r\n                            <input type=\"text\" className='form-control' value={fileName} readOnly/>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                             <button onClick={handleClick} className='btn btn-green'> Upload a file </button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group as={Row} className='form-part'>\r\n                        <Form.Label column sm=\"2\">\r\n                        Student ID\r\n                        </Form.Label>\r\n                        <Col sm=\"3\">\r\n                        <input type=\"text\" className='form-control' value={studentId} onChange={(e) => handleInputChange(e, \"student-id\")}/>\r\n                        </Col>\r\n                        <Form.Label column sm=\"2\">\r\n                        Email\r\n                        </Form.Label>\r\n                        <Col sm=\"5\">\r\n                        <input type=\"text\" className='form-control' value={studentEmail} onChange={(e) => handleInputChange(e, \"email\")}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <button className='btn btn-green' style={{marginTop: \"1rem\"}} onClick={handleSubmit}> Submit </button>\r\n                </form>\r\n                <input type=\"file\" name=\"file\" onChange={onChangeHandler} ref={hiddenFileInput} style={{display: 'none'}}/>\r\n            </div>\r\n            <div className='submit-history'>\r\n                <h5> History </h5>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className='id-col'>ID</th>\r\n                            <th>INPUT</th>\r\n                            <th>SUBMITTED AT</th>\r\n                            <th>RESULT</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className='id-col'> 1 </th>\r\n                            <td> bias_mitigation.ipynb</td>\r\n                            <td> {date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate() + ' ' + date.getHours()+':' + date.getMinutes()} </td>\r\n                            <td> <button className='btn btn-secondary' onClick={handleShow}> Show </button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <Modal show={showModal} onHide={handleClose} className='mw-75'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title> Result </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className='text-center'>\r\n                    <h5> Your result after debiasing</h5>\r\n                    <table className='table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Class</th>\r\n                                <th scope=\"col\">Pblack</th>\r\n                                <th scope=\"col\">Pwhite</th>\r\n                                <th scope=\"col\">Pblack/Pwhite</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {resultStat.map((item, i) => \r\n                                <tr key={i}>\r\n                                    <th scope=\"row\"> {item.class}</th>\r\n                                    <td> {item.pblack} </td>\r\n                                    <td> {item.pwhite} </td>\r\n                                    <td> {item.pblack_white} </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <Row className={compareModel.choice}>\r\n                        <Col className='d-flex align-items-center justify-content-end'> <h6> Compare with a model: </h6></Col>\r\n                        <Col className='d-flex align-items-center justify-content-start'> \r\n                            <DropdownButton id=\"dropdown-basic-button\" title={chosenModel}>\r\n                                {modelChoice.map((item, i) => \r\n                                    <Dropdown.Item key={i} onClick={() => handleChooseModel(i)}>\r\n                                        {item}\r\n                                    </Dropdown.Item>\r\n                                )}\r\n                            </DropdownButton>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className={'compare-model '+ compareModel.compare}>\r\n                        <h5> {chosenModel} without debiasing </h5>\r\n                        <table className='table'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Class</th>\r\n                                    <th scope=\"col\">Pblack</th>\r\n                                    <th scope=\"col\">Pwhite</th>\r\n                                    <th scope=\"col\">Pblack/Pwhite</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {otherStat[modelChoice.findIndex(getIndexEq)].map((item, i) => \r\n                                    <tr key={i}>\r\n                                        <th scope=\"row\"> {item.class}</th>\r\n                                        <td> {item.pblack} </td>\r\n                                        <td> {item.pwhite} </td>\r\n                                        <td> {item.pblack_white} </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className='btn btn-secondary' onClick={handleClose}>\r\n                        Close\r\n                    </button>\r\n                    <button className='btn btn-primary' onClick={handleCompare}>\r\n                        {buttonTitle}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MitigationNew","import React from \"react\"\r\n\r\nconst Finish = () => {\r\n    return (\r\n        <div className='evaluation' style={{minHeight: \"90vh\"}}>\r\n            <div className='evaluation-inner text-center' style={{padding: \"1rem 0rem\", minHeight: \"40vh\"}}>\r\n                <h3 style={{marginBottom: \"2rem\"}}> Form Submitted </h3>\r\n                <p> You have finished the activity! </p>\r\n                <p>As the platform is currently in development, feel free to leave any feedback or bug report here.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finish","import React from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport MyNavbar from \"../components/MyNavbar\"\r\nimport Visualization from \"./Visualization\"\r\nimport MitigationNew from \"./MitigationNew\"\r\nimport Finish from \"./Finish\"\r\n\r\nconst Main = () => {\r\n\r\n\r\n    const loaderActive = useSelector(state => state.loaderActive)\r\n    \r\n    return(\r\n    <div className='main-application'>\r\n        {/* <Route path='/' render={(props) => <StepProgress {...props} current_step={this.state.current_step} />} /> */}\r\n        <div className={'loader-bg '+loaderActive}>\r\n\r\n        </div>\r\n        <MyNavbar />\r\n        <Switch>\r\n            <Route path='/visualization' component={Visualization}></Route>\r\n            <Route path='/fin' component={Finish}></Route>\r\n            <Route path='/mitigation' component={MitigationNew}></Route>\r\n        </Switch>\r\n    </div>\r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport Introduction from \"./pages/Introduction\"\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <div>\n        <Switch>\n          <Route exact path='/' component={Introduction}></Route>\n          <Route path='/' component={Main}></Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.location.pathname !== prevProps.location.pathname\r\n    ) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","const modelReducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case 'CHANGE_MODEL': \r\n            return action.model;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default modelReducer","const datasetReducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case 'CHANGE_DATA': \r\n            return action.dataset;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default datasetReducer","const sectionReducer = (state = 1, action) => {\r\n    switch(action.type) {\r\n        case 'NEXT_SECTION':\r\n            return state + 1\r\n        case 'PREV_SECTION':\r\n            return state - 1\r\n        case 'SET_SECTION':\r\n            return action.section\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default sectionReducer","const loaderReducer = (state='d-none', action) => {\r\n    switch(action.type) {\r\n        case \"LOADER_ACTIVE\":\r\n            return \"\"\r\n        case \"LOADER_DEACTIVE\":\r\n            return \"d-none\"\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loaderReducer","import modelReducer from \"./modelReducer\"\r\nimport datasetReducer from \"./datasetReducer\"\r\nimport sectionReducer from \"./sectionReducer\"\r\nimport loaderReducer from \"./loaderReducer\"\r\nimport {combineReducers} from \"redux\"\r\n\r\nconst allReducers = combineReducers({\r\n    model: modelReducer,\r\n    data: datasetReducer,\r\n    section: sectionReducer,\r\n    loaderActive: loaderReducer\r\n})\r\n\r\nexport default allReducers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Route} from 'react-router-dom'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ScrollToTop from \"./components/ScrollToTop\"\r\nimport {createStore} from \"redux\";\r\nimport allReducers from \"./reducers\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nconst myStore = createStore(allReducers, \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={myStore}>\r\n      {/* <ScrollToTop />\r\n      <Route path='/' component={App} /> */}\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}