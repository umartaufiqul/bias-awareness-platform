{"version":3,"sources":["images/graph.png","components/Button.js","pages/Introduction.js","pages/CodeNotebook.js","components/StepProgress.js","components/VisualModel.js","components/VisualDataset.js","pages/Visualization.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","goToLink","window","location","href","props","link","className","this","onClick","name","Component","Introduction","id","CodeNotebook","rows","cols","StepProgress","progressRef","React","createRef","state","current_step","currentStep","first_step","second_step","third_step","fourth_step","fifth_step","refresh","nextProps","setState","console","log","updateProgress","updateClass","i","create_model","visualize_result","evaluation","bias_mitigate","comparison_eval","createProgress","VisualModel","cauc_thres","aae_thres","type","value","defaultChecked","e","changeThreshold","target","VisualDataset","Visualization","dataset_active","model_active","src","require","alt","changeActiveState","currentTarget","to","exact","path","component","Main","updateCurrentStep","str","pathname","includes","App","Boolean","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.726145a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph.2a2e6249.png\";","import React, { Component } from \"react\"\r\nimport \"../style/Button.css\"\r\n\r\nclass Button extends Component {\r\n    goToLink = () => {\r\n        window.location.href = this.props.link\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <button \r\n                className=\"button\"\r\n                onClick={this.goToLink}\r\n                >{this.props.name}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button","import React from \"react\"\r\nimport Button from \"../components/Button\"\r\n\r\nfunction Introduction() {\r\n    return(\r\n        <div className=\"App\">\r\n            <h1 className=\"text-center\"> Activity 1. Bias in Hate Speech Detection </h1>\r\n            <p> In this activity, a member of high school board would like to have a feedback about their school facility and faculty. However, following the school policy, the board doesn't want to include feedbacks that include toxic or abusive words. On the other hand, the school board is concerned that some of the underrepresented group of student can be unnecessarily filtered out</p>\r\n            <div className=\"container\">\r\n            {/* This is the example of accepatble and unacceptable comment */}\r\n            <div className=\"comment-sample\" id=\"c-sample1\">\r\n                <p>The school lunch is delicious, but I wish the portion could be more fulfilling</p> \r\n            </div>\r\n            <div className=\"comment-sample\" id=\"c-sample2\">\r\n                <p>The school lunch sucks!</p> \r\n            </div>\r\n            <div className=\"accept-comment\" id=\"a-comment1\">\r\n                <p> Acceptable Comment </p>\r\n            </div>\r\n            <div className=\"accept-comment\" id=\"a-comment2\">\r\n                <p> Unacceptable Comment </p>\r\n            </div>\r\n            </div>\r\n            <p> Your task is to create a model that can automatically detect and remove such feedback, while taking the school board concern into consideration</p>\r\n            <div className=\"text-center\">\r\n            <Button name=\"Start Activity\" link='/bias-awareness-platform/code'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduction","import React, {Component} from \"react\"\r\nimport \"../style/CodeNotebook.css\"\r\nimport Button from \"../components/Button\"\r\n\r\nclass CodeNotebook extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"main-body\">\r\n                <h1 className=\"text-center\"> Build the Model </h1>\r\n                <p> Build the classifier to detect the abusive and toxic feedbacks. For the purpose of the evaluation, use the variable <span> dataset </span> as the initial data</p>\r\n                <h2> Data Preprocessing </h2>\r\n                <textarea rows=\"10\"/>\r\n                <h2> Feature Generation </h2>\r\n                <textarea rows=\"10\"/>\r\n                <h2> Running the Model </h2>\r\n                <textarea rows=\"5\" cols=\"50\"/>\r\n                <Button name='Build' link='/bias-awareness-platform/visualization' className=\"text-center mt\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeNotebook","import React, {Component} from \"react\"\r\nimport \"../style/StepProgress.css\"\r\n\r\n\r\nclass StepProgress extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.progressRef = React.createRef()\r\n        this.state = {\r\n            current_step: this.props.currentStep,\r\n            first_step: \"bar-icon-uncompleted\",\r\n            second_step: \"bar-icon-uncompleted\",\r\n            third_step: \"bar-icon-uncompleted\",\r\n            fourth_step: \"bar-icon-uncompleted\",\r\n            fifth_step: \"bar-icon-uncompleted\",\r\n            refresh: false,\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.currentStep !== this.props.currentStep) {\r\n          this.setState({current_step: nextProps.currentStep, refresh: true});\r\n        }\r\n      }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.current_step)\r\n        if (this.state.refresh) {\r\n            this.updateProgress()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProgress()\r\n    }\r\n\r\n    updateProgress() {\r\n        var updateClass = [\"bar-icon-uncompleted\", \"bar-icon-uncompleted\", \"bar-icon-uncompleted\", \"bar-icon-uncompleted\", \"bar-icon-uncompleted\"]\r\n        for (var i = 0; i < 5; i++) {\r\n            if ((i + 1) < this.state.current_step) {\r\n                updateClass[i] = \"bar-icon-completed\"\r\n            }\r\n            else if ((i + 1) === this.state.current_step) {\r\n                updateClass[i] = \"bar-icon\"\r\n            }\r\n        }\r\n        this.setState({\r\n            first_step: updateClass[0],\r\n            second_step: updateClass[1],\r\n            third_step: updateClass[2],\r\n            fourth_step: updateClass[3],\r\n            fifth_step: updateClass[4],\r\n            refresh: false,\r\n        })\r\n    }\r\n\r\n    createProgress() {\r\n        var create_model = \r\n        <li>\r\n            <div className={'last-cat ' + this.state.first_step} >\r\n                {/* <img src={require(\"../icons/check.svg\")} alt=\"\" height=\"32\" width=\"32\" /> */}\r\n            </div>\r\n            <p> Create model </p>\r\n        </li>\r\n\r\n        var visualize_result = \r\n        <li>\r\n            <div className={this.state.second_step}></div>\r\n            <p> Result visualization </p> \r\n        </li>\r\n\r\n        var evaluation = \r\n        <li>\r\n            <div className={this.state.third_step}></div>\r\n            <p> Evaluation </p> \r\n        </li>\r\n\r\n        var bias_mitigate = \r\n        <li> \r\n            <div className={this.state.fourth_step}></div>\r\n            <p> Bias mitigation </p>\r\n        </li>\r\n\r\n        var comparison_eval = \r\n        <li> \r\n            <div className={this.state.fifth_step}></div>\r\n            <p> Comparison and Evaluation </p>\r\n        </li> \r\n        var progress = \r\n        <div className=\"step-progress\">\r\n            <ul>                \r\n            {create_model}\r\n            {visualize_result}\r\n            {evaluation}\r\n            {bias_mitigate}\r\n            {comparison_eval}\r\n            </ul>\r\n        </div>\r\n        \r\n        return progress\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            this.createProgress()\r\n        )\r\n    }\r\n}\r\n\r\nexport default StepProgress","import React, { Component } from \"react\"\r\n\r\nclass VisualModel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cauc_thres: \"active\",\r\n            aae_thres: \"active\",\r\n        }\r\n    }\r\n\r\n    changeThreshold(id) {\r\n        if (id === \"cauc\") {\r\n            if (this.state.cauc_thres === \"\") {\r\n                this.setState({cauc_thres: \"active\"})\r\n            }\r\n            else {\r\n                this.setState({cauc_thres: \"\"})\r\n            }\r\n        }\r\n        else {\r\n            if (this.state.aae_thres === \"\") {\r\n                this.setState({aae_thres: \"active\"})\r\n            }\r\n            else {\r\n                this.setState({aae_thres: \"\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='visual-model'>\r\n                <div className='constraint'>\r\n                    <h3> Constraint </h3>\r\n                    <ul>\r\n                        <li> <input type='radio' name='constraint' value='1' defaultChecked/> Race blind </li> \r\n                        <li> <input type='radio' name='constraint' value='2' /> Demographic parity </li> \r\n                        <li> <input type='radio' name='constraint' value='3' /> Equal Opportunity </li> \r\n                        <li> <input type='radio' name='constraint' value='4' /> Equalized odds </li> \r\n                    </ul>\r\n                </div>\r\n                <div className='toxic-thres'>\r\n                    <h3> Toxicity Threshold </h3>\r\n                    <div className='check-group'>\r\n                        <div className={\"check-box \" + this.state.cauc_thres} id=\"cauc\" onClick={e => this.changeThreshold(e.target.id)}> </div> <span> Caucasian </span> \r\n                    </div>\r\n                    <div className='check-group'>\r\n                        <div className={\"check-box \" + this.state.aae_thres} id=\"aae\" onClick={e => this.changeThreshold(e.target.id)}> </div> <span> African American </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisualModel","import React, { Component } from \"react\"\r\n\r\nclass VisualDataset extends Component {\r\n    render() {\r\n        return(\r\n            <div className='visual-dataset'>\r\n                <h3> Dataset </h3>\r\n                <ul>\r\n                    <li> <input type='radio' name ='dataset' value='data1' defaultChecked/> Dataset 1</li>\r\n                    <li> <input type='radio' name ='dataset' value='data2'/> Dataset 2 </li>\r\n                    <li> <input type='radio' name ='dataset' value='data3'/> Dataset 3 </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisualDataset","import React, {Component} from \"react\"\r\nimport \"../style/Visualization.css\"\r\nimport { Switch, Route, Link } from \"react-router-dom\"\r\nimport VisualModel from \"../components/VisualModel\"\r\nimport VisualDataset from \"../components/VisualDataset\"\r\n\r\nclass Visualization extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataset_active: \"active\",\r\n            model_active: \"\",\r\n        }\r\n    }\r\n\r\n    changeActiveState(id) {\r\n        if (id === \"dataset-tab\") {\r\n            this.setState({dataset_active: \"active\", model_active: \"\"})\r\n        } else {\r\n            this.setState({dataset_active: \"\", model_active: \"active\"})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"visualization\">\r\n                <h1> Abusive Speech Detection Result </h1> \r\n                <div className=\"visual-container\">\r\n                    <img src={require(\"../images/graph.png\")} className=\"graph-box\" alt=\"graph\"/>\r\n                    <div className=\"explain-box\">\r\n                        <ul className=\"legend-box\">\r\n                            <li id=\"legend-toxic\"> Toxic text </li>\r\n                            <li id=\"legend-nontoxic\"> Non-toxic text </li>\r\n                        </ul>\r\n                        <div className=\"result-box\">\r\n                            <h2> Result </h2>\r\n                            <ul>\r\n                                <li> Precision: 0.76 </li>\r\n                                <li> Recall: 0.89 </li>\r\n                                <li> Fairness metrics: ___ </li>\r\n                            </ul>\r\n                        </div>  \r\n                    </div>\r\n                </div>                \r\n                <ul className=\"choices\">\r\n                    <li className={this.state.dataset_active} id=\"dataset-tab\" onClick={(e) => this.changeActiveState(e.currentTarget.id)}> <Link to='/bias-awareness-platform/visualization/dataset'> Dataset </Link></li>\r\n                    <li className={this.state.model_active} id=\"model-tab\" onClick={(e) => this.changeActiveState(e.currentTarget.id)}> <Link to='/bias-awareness-platform/visualization/model'> Model </Link></li>\r\n                </ul>\r\n                <div className=\"interact-container\">\r\n                    <Switch>\r\n                        <Route exact path='/bias-awareness-platform/visualization' component={VisualDataset} />\r\n                        <Route path='/bias-awareness-platform/visualization/dataset' component={VisualDataset} />\r\n                        <Route path='/bias-awareness-platform/visualization/model' component={VisualModel} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Visualization","import React, {Component} from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport CodeNotebook from \"./CodeNotebook\"\r\nimport StepProgress from \"../components/StepProgress\"\r\nimport Visualization from \"./Visualization\"\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            current_step: 1\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"updated in parent\")\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.location)\r\n        this.updateCurrentStep()\r\n    }\r\n\r\n    updateCurrentStep() {\r\n        var str = this.props.location.pathname\r\n        if (str.includes(\"visualization\")) {\r\n            this.setState({\r\n                current_step: 2\r\n            })\r\n        }\r\n        else if (str.includes(\"evaluation\")){\r\n            this.setState({\r\n                current_step: 3\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n            <StepProgress currentStep={this.state.current_step}/>\r\n            <Switch>\r\n                <Route path='/code' component={CodeNotebook}></Route>\r\n                <Route path='/visualization' component={Visualization}></Route>\r\n                {/* <Route exact path='/evaluation' component={Visualization}></Route> */}\r\n            </Switch>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport Introduction from \"./pages/Introduction\"\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <div>\n        <Switch>\n          <Route exact path='/' component={Introduction}></Route>\n          <Route path='/' component={Main}></Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Route path='/' component={App} />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}