{"version":3,"sources":["images/graph.png","icons/dataset_fill.svg","icons/dataset.svg","icons/classifier_fill.svg","icons/classifier.svg","icons/prediction_fill.svg","icons/prediction.svg","components/Button.js","pages/Introduction.js","pages/CodeNotebook.js","components/StepProgress.js","components/VisualModel.js","components/VisualDataset.js","pages/Visualization.js","pages/Evaluation.js","components/MitigationAlgo.js","pages/Mitigation.js","components/Compare.js","components/Evaluate.js","pages/Comparison.js","pages/Main.js","App.js","serviceWorker.js","components/ScrollToTop.js","index.js"],"names":["module","exports","Button","goToLink","window","location","href","props","link","className","this","onClick","name","Component","Introduction","Row","Col","md","span","offset","CodeNotebook","rows","StepProgress","progressRef","React","createRef","state","current_step","first_step","second_step","third_step","fourth_step","fifth_step","refresh","createProgress","bind","nextProps","currentStep","setState","console","log","updateProgress","updateClass","i","str","pathname","create_model","to","style","color","visualize_result","evaluation","bias_mitigate","comparison_eval","question_btn","includes","goToEvaluation","VisualModel","cauc_thres","aae_thres","id","type","value","defaultChecked","e","changeThreshold","target","VisualDataset","Visualization","closeTour","isTourOpen","disableBody","disableBodyScroll","enableBody","enableBodyScroll","dataset_active","model_active","steps","selector","content","textAlign","onLoad","changeActiveState","position","src","require","alt","currentTarget","changeContent","isOpen","onRequestClose","onAfterOpen","onBeforeClose","Evaluation","MitigationAlgo","PredictionsAlgo","handleClick","ClassifierAlgo","DatasetAlgo","selected","algo","chooseAlgo","dataset_fill","dataset","classifier_fill","classifier","predict_fill","predict","Mitigation","dataset_src","classifier_src","predict_src","choosePhase","Compare","bias_dropdown","showDropdown","parsed","split","undefined","Dropdown","Toggle","Menu","Item","Evaluate","Comparison","compare_active","evaluate_active","returnContent","Main","updateCurrentStep","path","render","component","App","exact","Boolean","hostname","match","ScrollToTop","prevProps","scrollTo","withRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb5fa124.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph.2a2e6249.png\";","module.exports = __webpack_public_path__ + \"static/media/dataset_fill.94d25a65.svg\";","module.exports = __webpack_public_path__ + \"static/media/dataset.e73d48bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/classifier_fill.6e22b02e.svg\";","module.exports = __webpack_public_path__ + \"static/media/classifier.9cfac40f.svg\";","module.exports = __webpack_public_path__ + \"static/media/prediction_fill.aea17280.svg\";","module.exports = __webpack_public_path__ + \"static/media/prediction.ae83db9c.svg\";","import React, { Component } from \"react\"\r\nimport \"../style/Button.css\"\r\n\r\nclass Button extends Component {\r\n    goToLink = () => {\r\n        window.location.href = this.props.link\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <button \r\n                className=\"button\"\r\n                onClick={this.goToLink}\r\n                >{this.props.name}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button","import React from \"react\"\r\nimport Button from \"../components/Button\"\r\nimport {Col, Row} from \"react-bootstrap\"\r\n\r\nfunction Introduction() {\r\n    return(\r\n        <div className=\"App\">\r\n            <h1 className=\"text-center\"> Activity 1. Bias in Hate Speech Detection </h1>\r\n            <p> In this activity, a member of high school board would like to have a feedback about their school facility and faculty. However, following the school policy, the board doesn't want to include feedbacks that include toxic or abusive words. On the other hand, the school board is concerned that some of the underrepresented group of student can be unnecessarily filtered out</p>\r\n            <Row className='text-center'>\r\n                <Col md={{span: 3, offset: 2}}> \r\n                    <div className='comment-sample'> The school lunch is delicious, but I wish the portion could be more fulfilling </div> \r\n                    <div className='comment-label'> Acceptable comment </div>\r\n                </Col>\r\n                <Col md={{span: 3, offset: 2}}> \r\n                    <div className='comment-sample'> The school lunch sucks! </div> \r\n                    <div className='comment-label'> Unacceptable </div> \r\n                </Col>\r\n            </Row>\r\n            <p> Your task is to create a model that can automatically detect and remove such feedback, while taking the school board concern into consideration</p>\r\n            <div className=\"text-center\">\r\n            <Button name=\"Start Activity\" link='/bias-awareness-platform/#/code'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Introduction","import React, {Component} from \"react\"\r\nimport \"../style/CodeNotebook.css\"\r\nimport Button from \"../components/Button\"\r\n\r\nclass CodeNotebook extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"page-box code-notebook\">\r\n                <h1 className=\"text-center\"> Build the Model </h1>\r\n                <p> Build the classifier to detect the abusive and toxic feedbacks. For the purpose of the evaluation, use the variable <span> dataset </span> as the initial data</p>\r\n                <h2> Data Preprocessing </h2>\r\n                <textarea rows=\"8\"/>\r\n                <h2> Feature Generation </h2>\r\n                <textarea rows=\"10\"/>\r\n                <h2> Running the Model </h2>\r\n                <textarea rows=\"5\"/>\r\n                <Button name='Build' link='/bias-awareness-platform/#/visualization' className=\"text-center mt\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeNotebook","import React, {Component} from \"react\"\r\nimport \"../style/StepProgress.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass StepProgress extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.progressRef = React.createRef()\r\n        this.state = {\r\n            current_step: this.props.current_step,\r\n            first_step: \"bar-icon-uncompleted\",\r\n            second_step: \"bar-icon-uncompleted\",\r\n            third_step: \"bar-icon-uncompleted\",\r\n            fourth_step: \"bar-icon-uncompleted\",\r\n            fifth_step: \"bar-icon-uncompleted\",\r\n            refresh: false,\r\n        }\r\n        this.createProgress = this.createProgress.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.currentStep !== this.props.current_step) {\r\n          this.setState({current_step: nextProps.current_step, refresh: true});\r\n        }\r\n      }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.current_step)\r\n        if (this.state.refresh) {\r\n            this.updateProgress()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        this.updateProgress()\r\n    }\r\n\r\n    goToEvaluation() {\r\n        window.location.href='/bias-awareness-platform/#/evaluation'\r\n    }\r\n\r\n    updateProgress() {\r\n        var updateClass = [\"bar-icon-uncompleted\", \"bar-icon-uncompleted\", \"bar-icon-uncompleted\", \"bar-icon-uncompleted\", \"bar-icon-uncompleted\"]\r\n        for (var i = 0; i < 5; i++) {\r\n            if ((i + 1) < this.state.current_step) {\r\n                updateClass[i] = \"bar-icon-completed\"\r\n            }\r\n            else if ((i + 1) === this.state.current_step) {\r\n                updateClass[i] = \"bar-icon\"\r\n            }\r\n        }\r\n        console.log(updateClass)\r\n        this.setState({\r\n            first_step: updateClass[0],\r\n            second_step: updateClass[1],\r\n            third_step: updateClass[2],\r\n            fourth_step: updateClass[3],\r\n            fifth_step: updateClass[4],\r\n            refresh: false,\r\n        })\r\n    }\r\n\r\n    createProgress() {\r\n        const str = this.props.location.pathname\r\n        var create_model = \r\n        <li>\r\n            <Link to=\"/code\" style={{color: 'black'}}>\r\n                <div className={'last-cat ' + this.state.first_step}>\r\n                    {/* <img src={require(\"../icons/check.svg\")} alt=\"\" height=\"32\" width=\"32\" /> */}\r\n                </div>\r\n                <p> Create model </p>\r\n            </Link>\r\n        </li>\r\n\r\n        var visualize_result = \r\n        <li>\r\n            <Link to=\"/visualization\" style={{color: 'black'}}>\r\n                <div className={this.state.second_step}></div>\r\n                <p> Result visualization </p> \r\n            </Link>\r\n        </li>\r\n\r\n        var evaluation = \r\n        <li>\r\n            <Link to=\"/evaluation\" style={{color: 'black'}}>\r\n                <div className={this.state.third_step}></div>\r\n                <p> Evaluation </p> \r\n            </Link>\r\n        </li>\r\n\r\n        var bias_mitigate = \r\n        <li> \r\n            <Link to=\"/mitigation\" style={{color: 'black'}}>\r\n                <div className={this.state.fourth_step}></div>\r\n                <p> Bias mitigation </p>\r\n            </Link>\r\n        </li>\r\n\r\n        var comparison_eval = \r\n        <li> \r\n            <Link to=\"/comparison\" style={{color: 'black'}}>\r\n                <div className={this.state.fifth_step}></div>\r\n                <p> Comparison and Evaluation </p>\r\n            </Link>\r\n        </li> \r\n        var question_btn = \"\"\r\n        if (str.includes(\"visualization\")) {\r\n            question_btn = \r\n            <div className='question-btn' onClick={this.goToEvaluation}>\r\n                Question\r\n            </div> \r\n        }\r\n        var progress = \r\n        <div className=\"step-progress\">\r\n            <ul className='step-ul'>                \r\n            {create_model}\r\n            {visualize_result}\r\n            {evaluation}\r\n            {bias_mitigate}\r\n            {comparison_eval}\r\n            </ul>\r\n            {question_btn}\r\n        </div>\r\n        \r\n        return progress\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            this.createProgress()\r\n        )\r\n    }\r\n}\r\n\r\nexport default StepProgress","import React, { Component } from \"react\"\r\nimport {Col, Row} from \"react-bootstrap\"\r\n\r\nclass VisualModel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cauc_thres: \"active\",\r\n            aae_thres: \"active\",\r\n        }\r\n    }\r\n\r\n    changeThreshold(id) {\r\n        if (id === \"cauc\") {\r\n            if (this.state.cauc_thres === \"\") {\r\n                this.setState({cauc_thres: \"active\"})\r\n            }\r\n            else {\r\n                this.setState({cauc_thres: \"\"})\r\n            }\r\n        }\r\n        else {\r\n            if (this.state.aae_thres === \"\") {\r\n                this.setState({aae_thres: \"active\"})\r\n            }\r\n            else {\r\n                this.setState({aae_thres: \"\"})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div className='visual-model'>\r\n            //     <div className='constraint'>\r\n            //         <h3> Constraint </h3>\r\n            //         <ul>\r\n            //             <li> <input type='radio' name='constraint' value='1' defaultChecked/> Race blind </li> \r\n            //             <li> <input type='radio' name='constraint' value='2' /> Demographic parity </li> \r\n            //             <li> <input type='radio' name='constraint' value='3' /> Equal Opportunity </li> \r\n            //             <li> <input type='radio' name='constraint' value='4' /> Equalized odds </li> \r\n            //         </ul>\r\n            //     </div>\r\n            //     <div className='toxic-thres'>\r\n                    // <h3> Toxicity Threshold </h3>\r\n                    // <div className='check-group'>\r\n                    //     <div className={\"check-box \" + this.state.cauc_thres} id=\"cauc\" onClick={e => this.changeThreshold(e.target.id)}> </div> <span> Caucasian </span> \r\n                    // </div>\r\n                    // <div className='check-group'>\r\n                    //     <div className={\"check-box \" + this.state.aae_thres} id=\"aae\" onClick={e => this.changeThreshold(e.target.id)}> </div> <span> African American </span>\r\n                    // </div>\r\n            //     </div>\r\n            // </div>\r\n            <Row>\r\n                <Col className='constraint' md={{span: 4}}>\r\n                    <h3> Constraint </h3>\r\n                    <ul>\r\n                        <li> <input type='radio' name='constraint' value='1' defaultChecked/> Race blind </li> \r\n                        <li> <input type='radio' name='constraint' value='2' /> Demographic parity </li> \r\n                        <li> <input type='radio' name='constraint' value='3' /> Equal Opportunity </li> \r\n                        <li> <input type='radio' name='constraint' value='4' /> Equalized odds </li> \r\n                    </ul>\r\n                </Col>\r\n                <Col className='toxic-thres' md={{span: 4}}>\r\n                    <h3> Toxicity Threshold </h3>\r\n                    <div className='check-group'>\r\n                        <div className={\"check-box \" + this.state.cauc_thres} id=\"cauc\" onClick={e => this.changeThreshold(e.target.id)}> </div> <span> Caucasian </span> \r\n                    </div>\r\n                    <div className='check-group'>\r\n                        <div className={\"check-box \" + this.state.aae_thres} id=\"aae\" onClick={e => this.changeThreshold(e.target.id)}> </div> <span> African American </span>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisualModel","import React, { Component } from \"react\"\r\n\r\nclass VisualDataset extends Component {\r\n    render() {\r\n        return(\r\n            <div className='visual-dataset'>\r\n                <h3> Dataset </h3>\r\n                <ul>\r\n                    <li> <input type='radio' name ='dataset' value='data1' defaultChecked/> Dataset 1</li>\r\n                    <li> <input type='radio' name ='dataset' value='data2'/> Dataset 2 </li>\r\n                    <li> <input type='radio' name ='dataset' value='data3'/> Dataset 3 </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisualDataset","import React, {Component} from \"react\"\r\nimport \"../style/Visualization.css\"\r\nimport VisualModel from \"../components/VisualModel\"\r\nimport VisualDataset from \"../components/VisualDataset\"\r\nimport Tour from \"reactour\"\r\nimport {disableBodyScroll, enableBodyScroll} from \"body-scroll-lock\"\r\nimport {Col, Row} from \"react-bootstrap\"\r\n\r\nclass Visualization extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataset_active: \"active\",\r\n            model_active: \"\",\r\n            isTourOpen: false,\r\n        }\r\n    }\r\n\r\n    changeActiveState(id) {\r\n        console.log(id)\r\n        if (id === \"dataset-tab\" && this.state.dataset_active === \"\") {\r\n            this.setState({dataset_active: \"active\", model_active: \"\"})\r\n        } else if (id === \"model-tab\" && this.state.model_active === \"\"){\r\n            this.setState({dataset_active: \"\", model_active: \"active\"})\r\n        }\r\n    }\r\n\r\n    changeContent() {\r\n        if (this.state.dataset_active === \"active\") {\r\n            return <VisualDataset />\r\n        }\r\n        else {\r\n            return <VisualModel />\r\n        }\r\n    }\r\n\r\n    closeTour = () => {\r\n        this.setState({ isTourOpen: false });\r\n      };\r\n\r\n    componentDidMount() {\r\n        this.setState({isTourOpen: true})\r\n    }\r\n\r\n    disableBody = target => disableBodyScroll(target);\r\n    enableBody = target => enableBodyScroll(target);  \r\n\r\n    render() {\r\n    const steps = [\r\n        {\r\n            selector: '',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Visualizing the Result </h3>\r\n                    <p> In this step you can see the result of the model that you have made in the previous step, and also interact with the components of the process to see how it affect the fairness of a model</p> \r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            selector: '.graph-box',\r\n            content: () => (\r\n                <div>\r\n                    <h3 style={{textAlign: 'center'}}> Graph </h3> \r\n                    <p> This graph plot each of the feedback’s probability of being toxic against the probability of it using AAE dialect. The higher its toxic probability, the higher it chance to be classified as toxic </p>\r\n                    <p> The higher its toxic probability, the higher it chance to be classified as toxic. On the other hand, the higher its AAE dialect probability, the higher it is to come from African American students</p>\r\n                </div>\r\n                )\r\n        },\r\n        {\r\n            selector: '.result-box',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Result Box </h3>\r\n                    <p> The result box display not only the accuracy result for the model, but also the racial bias of the model </p>\r\n                    <p> The fairness metrics is determined as how non-discriminatory is the classifier.</p>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            selector: '.toxic-thres',\r\n            content: () => (\r\n                <div onLoad={this.changeActiveState(\"model-tab\")}>\r\n                    <h3 className='text-center'> Toxicity Threshold </h3>\r\n                    <p> Toxicity threshold is the decision threshold for toxic feedback. Any feedback that has toxic probability above toxic threshold is considered as toxic. </p>\r\n                    <p> The toxicity threshold may differ between groups, depending on the constraint</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            selector: '.constraint',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Constraints </h3>\r\n                    <p> Constraint affect the toxicity decision, since different constraints result in different toxicity threshold. This further lead to different level of accuracy and fairness. </p> \r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            selector: '.question-btn',\r\n            content: () => (\r\n                <div>\r\n                    <h3 className='text-center'> Explore and Observe </h3>\r\n                    <p> There will be a few questions in the next step, so explore and observe as much as you can. </p>\r\n                    <p> Once you’re done, click the question box on the top right corner. Don’t worry, you can go back again if you want to</p>\r\n                </div>\r\n            ),\r\n            position: 'middle',\r\n        }\r\n    ]\r\n\r\n        return(\r\n            <div className=\"visualization page-box\">\r\n                <div className=\"vis-header\">\r\n                    <h1> Abusive Speech Detection Result </h1> \r\n                </div>\r\n                {/* <div className=\"visual-container\">\r\n                    <img src={require(\"../images/graph.png\")} className=\"graph-box\" alt=\"graph\"/>\r\n                    <div className=\"explain-box\">\r\n                        <ul className=\"legend-box\">\r\n                            <li id=\"legend-toxic\"> Toxic text </li>\r\n                            <li id=\"legend-nontoxic\"> Non-toxic text </li>\r\n                        </ul>\r\n                        <div className=\"result-box\">\r\n                            <h2> Result </h2>\r\n                            <ul>\r\n                                <li> Precision: 0.76 </li>\r\n                                <li> Recall: 0.89 </li>\r\n                                <li> Fairness metrics: ___ </li>\r\n                            </ul>\r\n                        </div>  \r\n                    </div>\r\n                </div>                 */}\r\n                <Row className='visual-container'>\r\n                    <Col md={{span:4, offset: 2}}> <img src={require(\"../images/graph.png\")} className=\"graph-box\" alt=\"graph\"/> </Col>\r\n                    <Col md={{span:3, offset:1}}>\r\n                        <ul className=\"legend-box\">\r\n                            <li id=\"legend-toxic\"> Toxic text </li>\r\n                            <li id=\"legend-nontoxic\"> Non-toxic text </li>\r\n                        </ul>\r\n                        <div className=\"result-box\">\r\n                            <h2> Result </h2>\r\n                            <ul>\r\n                                <li> Precision: 0.76 </li>\r\n                                <li> Recall: 0.89 </li>\r\n                                <li> Fairness metrics: ___ </li>\r\n                            </ul>\r\n                        </div> \r\n                    </Col>\r\n                </Row>\r\n                <ul className=\"choices\">\r\n                    <li className={this.state.dataset_active} id=\"dataset-tab\" onClick={(e) => this.changeActiveState(e.currentTarget.id)}> Dataset </li>\r\n                    <li className={this.state.model_active} id=\"model-tab\" onClick={(e) => this.changeActiveState(e.currentTarget.id)}> Model </li>\r\n                </ul>\r\n                <div className=\"interact-container\">\r\n                    {this.changeContent()}\r\n                </div>\r\n                <Tour \r\n                    steps={steps}\r\n                    isOpen={this.state.isTourOpen}\r\n                    onRequestClose={this.closeTour}\r\n                    onAfterOpen={this.disableBody}\r\n                    onBeforeClose={this.enableBody}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Visualization","import React, {Component} from \"react\"\r\nimport \"../style/Evaluation.css\"\r\nimport Button from \"../components/Button\"\r\n\r\nclass Evaluation extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"evaluation page-box\">\r\n                <h1> Evaluation and Questions </h1>\r\n                <p> After building the model and see the visualization of the result, here are some questions that you need to answer</p> \r\n                <p> In case you need to see the visualization again, you can click the result button on the right corner </p> \r\n                <form>\r\n                    <label> 1. Based on the visualization and the result, do you find any noteworthy finding? What do you think cause this? </label>\r\n                    <textarea />\r\n                    <label> 2. Once you try several other datasets, did you notice any different between datasets? What do you think cause this? </label>\r\n                    <textarea />\r\n                    <label> 3. Which dataset do you think is better out of the ones that you try? Why do you think so? </label>\r\n                    <textarea />\r\n                    <label> 4. From the definitions of the metrics that are shown in the \"model\" tab, which one do you think is the fairest for both groups? Why?  </label>\r\n                    <textarea />\r\n                    <label> 5. Try and change the metrics several times. Did you notice any changes? (e.g in term of distribution and accuracy) </label>\r\n                    <textarea />\r\n                    <label> 6. Now that you've tried several metrics, which one do you think is the fairest for both groups? Why? </label>\r\n                    <textarea />\r\n                </form>\r\n                <div className='text-center'>\r\n                    <Button name='Submit' link='/bias-awareness-platform/#/mitigation'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Evaluation","import React, {Component} from \"react\"\r\n\r\n\r\nclass MitigationAlgo extends Component {\r\n    chooseAlgo() {\r\n\r\n        const PredictionsAlgo = (\r\n            <tr>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='reject-option'> \r\n                    <h3> Reject Option Classification </h3> \r\n                    <p> Changes prediction result from a classifier to make it fairer </p>     \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='equal-odd'> \r\n                    <h3> Equalized odds </h3>\r\n                    <p> Modify the predicted labels using an optimized scheme </p> \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='calibrated-odd'> \r\n                    <h3> Calibrated Equalized odds </h3>\r\n                    <p> Optimize over calibrated score to make the prediction fairer </p> \r\n                </td>\r\n            </tr>\r\n        )\r\n\r\n        const ClassifierAlgo = (\r\n            <tr>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='advers-debias'> \r\n                    <h3> Adversarial Debiasing </h3> \r\n                    <p> Use adversarial technique to maximize accuracy and reduce evidence of protected attributes </p>     \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='prejudice-remove'> \r\n                    <h3> Prejudice Remover </h3>\r\n                    <p> Adds a discrimination-aware regularization term to learning objective </p> \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='meta-fair'> \r\n                    <h3> Meta Fair Classifier </h3>\r\n                    <p> Take fairness metrics as a part of input and optimize based on the metrics </p> \r\n                </td>\r\n            </tr>\r\n        )\r\n\r\n        const DatasetAlgo = (\r\n            <tr>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='optimize-pre'> \r\n                    <h3> Optimized Pre-Processing </h3> \r\n                    <p> Modifies the training data features and label </p>     \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='reweighing'> \r\n                    <h3> Reweighing </h3>\r\n                        <p> Modifies the weight of different training examples </p> \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='disparate'> \r\n                    <h3> Disparate Impact Remover </h3>\r\n                        <p> Edit features value to improve group fairness </p> \r\n                </td>\r\n                <td onClick={(e) => this.handleClick(e.currentTarget.id)} id='fair-learning'> \r\n                    <h3> Fair Learning Representation </h3>\r\n                        <p> Obfuscating information about the protected attributes </p> \r\n                </td>\r\n            </tr>\r\n        )\r\n\r\n        if (this.props.selected === \"dataset\") {\r\n            return DatasetAlgo\r\n        }\r\n        else if (this.props.selected === \"classifier\") {\r\n            return ClassifierAlgo\r\n        }\r\n        else if (this.props.selected === \"predict\") {\r\n            return PredictionsAlgo\r\n        }\r\n    }    \r\n\r\n    handleClick(algo) {\r\n        window.location.href = '/bias-awareness-platform/#/comparison?algo=' + algo\r\n    }\r\n\r\n    render(){ \r\n        return(\r\n            <div className='dataset-algo text-center'>\r\n                <table className='algo-title text-center'> \r\n                    <tbody>\r\n                        {this.chooseAlgo()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MitigationAlgo","import React, {Component} from \"react\"\r\nimport \"../style/Mitigation.css\"\r\nimport MitigationAlgo from \"../components/MitigationAlgo\"\r\nimport {Col, Row} from \"react-bootstrap\"\r\n\r\nconst dataset_fill = require('../icons/dataset_fill.svg')\r\nconst dataset = require('../icons/dataset.svg')\r\nconst classifier_fill = require('../icons/classifier_fill.svg')\r\nconst classifier = require('../icons/classifier.svg')\r\nconst predict_fill = require('../icons/prediction_fill.svg')\r\nconst predict = require('../icons/prediction.svg')\r\n\r\nclass Mitigation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataset_src: dataset_fill,\r\n            classifier_src: classifier_fill,\r\n            predict_src: predict_fill,\r\n            selected: \"none\"\r\n        }\r\n    }\r\n\r\n    choosePhase(id) {\r\n        console.log(id)\r\n        if (id === \"dataset\") {\r\n            this.setState({dataset_src: dataset_fill, classifier_src: classifier, predict_src: predict, selected: \"dataset\"})\r\n        }\r\n        else if (id === \"classifier\") {\r\n            this.setState({dataset_src: dataset, classifier_src: classifier_fill, predict_src: predict, selected: \"classifier\"})\r\n        }\r\n        else {\r\n            this.setState({dataset_src: dataset, classifier_src: classifier, predict_src: predict_fill, selected: \"predict\"})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-box mitigation\">\r\n                <h1> Bias Mitigation </h1> \r\n                <p> Changing the dataset into a fairer dataset may help reducing the racial bias, but a fair dataset doesn't always happen in real settings. In this case, we could resort to mitigate the bias instead </p>\r\n                <p> There are few concrete ways to mitigate the racial bias that may occur</p> \r\n                <h2 className='text-center'> Select a phase to add mitigation </h2>\r\n                <Row className='text-center phase-choice'>\r\n                    <Col md={{span: 2, offset: 3}}> <img src={this.state.dataset_src} alt='' id=\"dataset\" onClick={(e) => this.choosePhase(e.currentTarget.id)}/> </Col>\r\n                    <Col md={2}> <img src={this.state.classifier_src} alt='' id=\"classifier\" onClick={(e) => this.choosePhase(e.currentTarget.id)}/> </Col>\r\n                    <Col md={2}>  <img src={this.state.predict_src} alt='' id=\"predict\" onClick={(e) => this.choosePhase(e.currentTarget.id)}/> </Col>\r\n                </Row>\r\n                <MitigationAlgo selected={this.state.selected}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mitigation","import React, {Component} from \"react\"\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nclass Compare extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bias_dropdown: \"hide\",\r\n            algo: \"Select your algo\"\r\n        }\r\n        this.showDropdown = this.showDropdown.bind(this)\r\n    }\r\n\r\n    showDropdown() {\r\n        if (this.state.bias_dropdown === \"hide\") {\r\n            this.setState({bias_dropdown: \"show\"})\r\n        }\r\n        else if (this.state.bias_dropdown === \"show\") {\r\n            this.setState({bias_dropdown: \"hide\"})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const parsed = window.location.href.split(\"=\");\r\n        if (parsed[1] === undefined) {\r\n            this.setState({algo: \"Choose the mitigation algorithm...\"})\r\n        }\r\n        else {\r\n            this.setState({algo: parsed[1]})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id='comparison'>\r\n                <h2 className=\"text-center\"> Comparison </h2> \r\n                <div className='compare'>\r\n                    <div className=\"before-mitigate\">\r\n                        <h3> Without bias mitigation </h3>\r\n                    </div>\r\n                    <div className=\"after-mitigate\">\r\n                        <h3> Bias Mitigation: </h3>\r\n                        {/* <div className=\"bias-dd\"> \r\n                            <button className=\"bias-dd-btn\" onClick={this.showDropdown}> Select a mitigation</button>\r\n                            <div className={\"bias-dd-content \" + this.state.bias_dropdown}>\r\n                                <p> Tes 1</p>\r\n                                <p> Tes 2</p>\r\n                                <p> Tes 3</p> \r\n                            </div>\r\n                        </div> */}\r\n                        <Dropdown className='algo-dropdown'>\r\n                            <Dropdown.Toggle> {this.state.algo} </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item> Tes1 </Dropdown.Item>\r\n                                <Dropdown.Item> Tes1 </Dropdown.Item>\r\n                                <Dropdown.Item> Tes1 </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                    <div className=\"before-mitigate\">\r\n                        <img src={require(\"../images/graph.png\")} className=\"graph-box\" alt=\"graph\"/>\r\n                    </div>\r\n                    <div className=\"after-mitigate\">\r\n                        <img src={require(\"../images/graph.png\")} className=\"graph-box\" alt=\"graph\"/>\r\n                    </div>\r\n                    <ul className=\"legend-box\">\r\n                        <li id=\"legend-toxic\"> Toxic text </li>\r\n                        <li id=\"legend-nontoxic\"> Non-toxic text </li>\r\n                    </ul>\r\n                    <div className=\"before-mitigate\">\r\n                        <div className=\"result-box\">\r\n                            <h2> Result </h2>\r\n                            <ul>\r\n                                <li> Precision: 0.76 </li>\r\n                                <li> Recall: 0.89 </li>\r\n                                <li> Fairness metrics: ___ </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"after-mitigate\">\r\n                        <div className=\"result-box\">\r\n                            <h2> Result </h2>\r\n                            <ul>\r\n                                <li> Precision: 0.76 </li>\r\n                                <li> Recall: 0.89 </li>\r\n                                <li> Fairness metrics: ___ </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Compare","import React, {Component} from \"react\"\r\nimport Button from \"./Button\"\r\n\r\nclass Evaluate extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"evaluate\">\r\n                <h5> Try changing the bias mitigation method several times. You can change the bias mitigation method directly on the comparison, or going back to the previous page using the mitigation button the top right corner. For each form, use exactly one bias mitigation. You can submit the form multiple times</h5>\r\n                <form>\r\n                    <label> 1. Which bias mitigation do you use </label>\r\n                    <textarea />\r\n                    <label> 2. Is there any increase or decrease in fairness after the bias mitigation is applied? </label>\r\n                    <textarea />\r\n                    <label> 3. Is there any increase or decrease in accuracy after the bias mitigation is applied </label>\r\n                    <textarea />\r\n                    <label> 4. Based on the accuracy-fairness tradeoff, would you use this bias mitigation algorithm for this scenario in particular?  </label>\r\n                    <textarea />\r\n                </form>\r\n                <Button name=\"Submit\" link=\"/bias-awareness-platform/#/fin\" className=\"text-center\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Evaluate","import React, {Component} from \"react\"\r\nimport \"../style/Comparison.css\"\r\nimport Compare from \"../components/Compare\"\r\nimport Evaluate from \"../components/Evaluate\"\r\n\r\nclass Comparison extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            compare_active: \"active\",\r\n            evaluate_active: \"\"\r\n        }\r\n    }\r\n\r\n    changeContent(id) {\r\n        console.log(id)\r\n        if (id === \"comparison-tab\") {\r\n            this.setState({compare_active: \"active\",evaluate_active: \"\"})\r\n        } else {\r\n            this.setState({compare_active: \"\",evaluate_active: \"active\"})\r\n        }\r\n    }\r\n\r\n    returnContent() {\r\n        if (this.state.compare_active === \"active\") {\r\n            return <Compare />\r\n        } \r\n        else if (this.state.evaluate_active === \"active\") {\r\n            return <Evaluate />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"comparison page-box\">\r\n                <h1> Comparison and Evaluation </h1>\r\n                <p> After bias mitigation, here are the comparison between the classifier result before bias mitigation is applied and after the bias mitigation is applied.</p> \r\n                <ul className=\"choices\">\r\n                    <li className={this.state.compare_active} id=\"comparison-tab\" onClick={(e) => this.changeContent(e.currentTarget.id)}> Comparison </li>\r\n                    <li className={this.state.evaluate_active} id=\"evaluation-tab\" onClick={(e) => this.changeContent(e.currentTarget.id)}> Evaluation </li>\r\n                </ul>\r\n                <div className=\"interact-container\"> \r\n                    {this.returnContent()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comparison","import React, {Component} from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport CodeNotebook from \"./CodeNotebook\"\r\nimport StepProgress from \"../components/StepProgress\"\r\nimport Visualization from \"./Visualization\"\r\nimport Evaluation from \"./Evaluation\"\r\nimport Mitigation from \"./Mitigation\"\r\nimport Comparison from \"./Comparison\"\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            current_step: 1,\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"updated in parent\")\r\n        this.updateCurrentStep()\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.location)\r\n        this.updateCurrentStep()\r\n    }\r\n\r\n    updateCurrentStep() {\r\n        var str = this.props.location.pathname\r\n        if (str.includes(\"visualization\") && this.state.current_step !== 2 ) {\r\n            this.setState({\r\n                current_step: 2,\r\n            })\r\n        }\r\n        else if (str.includes(\"evaluation\")  && this.state.current_step !== 3){\r\n            this.setState({\r\n                current_step: 3,\r\n            })\r\n        }\r\n        else if (str.includes(\"mitigation\") && this.state.current_step !== 4) {\r\n            this.setState({current_step: 4})\r\n        }\r\n        else if (str.includes(\"comparison\") && this.state.current_step !== 5) {\r\n            this.setState({current_step: 5})\r\n        }\r\n        else if (str.includes(\"fin\") && this.state.current_step !== 6) {\r\n            this.setState({current_step: 6})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n            <Route path='/' render={(props) => <StepProgress {...props} current_step={this.state.current_step} />} />\r\n            {/* <StepProgress currentStep={this.state.current_step}/> */}\r\n            <Switch>\r\n                <Route path='/code' component={CodeNotebook}></Route>\r\n                <Route path='/visualization' component={Visualization}></Route>\r\n                <Route path='/evaluation' component={Evaluation}></Route>\r\n                <Route path='/mitigation' component={Mitigation}></Route>\r\n                <Route path='/comparison' component={Comparison}></Route>\r\n            </Switch>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport Introduction from \"./pages/Introduction\"\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <div>\n        <Switch>\n          <Route exact path='/' component={Introduction}></Route>\n          <Route path='/' component={Main}></Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.location.pathname !== prevProps.location.pathname\r\n    ) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Route} from 'react-router-dom'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ScrollToTop from \"./components/ScrollToTop\"\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <ScrollToTop />\r\n    <Route path='/' component={App} />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}